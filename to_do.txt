Current ASTControl 3.0 To Do (3.0):

3.0 To Do:
    - Weather & Solar consolidated
    - Servo control integration
    
    Next:
    - VNC firecapture
    - File transfer monitoring


UNC Install Priorities:
    - Network setup (DHCP, VNC)
    - Dome Camera ability (Motion)
    - File Transfer Protocol (Samba)
    - Arduino Remote Control (Python)
    - Dome Motor (Mechanical)
    - Scripts Later Remotely


Next test: Run control panel. Local testing.
    - test indigo server connection (Reconnect)

    - ensure solar calculations works (Yes)

    - test webcam (Yes, motionplus server works)

    - test mount control works (Next, test with simulator)
        # defunct with INDIGO control panel
    
    new: 

    - add scripting agent ability, return scripting module.
        - startup_mount
        - track_sun
        - shutdown_mount

    - test nstep works (Simple, finish wiring buttons; via SSH prop_tool, or JS INDIGO API)

    - test firecapture works (Reconnect, SSH run_fc.py)
    - test firecpture previews (X screenshot previews from PC)
    - test file mover & reports (next)


After test:
    - work on Automation: scripting agent and panel
    - work on arduino, dome & etalons: arduino ssh server

*-*-*-*-*-*-*-
AST Frontend & Backend Architecture

Web Design & Layout:

    -- Control & Feedback -- # Mount # Server
    Server Module:
        - Connect & Disconnect from Server
        - Scrollable logging (indigo/server)

    Mount Control Module:
        - Live RA/DEC display.
        - D-pad for slewing (N, S, E, W) with speed adjustment.
        - Toggle slew rates.
        - Toggle tracking modes (Solar).

    --Information-- # Utilities
    Solar Calculations Module:
        - Realtime Sun’s position, Sunrise, Sunset
        - Display Meridian crossing.

    Weather Module (OpenWeatherMap API):
        - Periodic weather data (temperature, humidity, wind).
        - Safety warnings for unfavorable conditions.
        
    --Control & Feedback-- # Peripherals
    Dome & Etalon Control Module (arduino):
        - Open/Close dome button (servo control).
        - Weather signalling integration for dome.

        - Inward / Outward buttons for two servos.
        - Speed control slider for fine adjustments.
        - Relative position display.
    
    nSTEP Focuser Control Module:
        - Speed Control: Slider for adjusting speed.
        - Direction Control: Buttons for inward and outward movement.
        - Position Feedback: Display current position (e.g., steps or absolute position).
        - Abort Motion: Button to stop motion immediately.
    
    --Information-- # Utilities
    Dome Cam:
        - Periodic (~ 1 FPS) camera feed from Dome webcam.

    Science Cam:
        - Periodic (1 FPS) camera feed from FireCapture.

    File Status Module (Future):
        - File monitoring for **`.avi** science camera files.
        - Status of file transfer/processing.

---------
Mechancial:

    - (Resolved) diagnose servo jitter, added ferrite coils 
    - 3D print box embedding coils & GPIO & arduino
    - wire tilt sensor xtension onto dome
    - 3D print holder for webcam

---------
Automation & Backend Architecture:

    server:
        - start_server.py
        - kill_server.py
        # ensure API is being fed correctly
        # check threading memory
        # asynchronous architecture
        ---
        - solved with server_con.py (2.6)

    mount:
        - startup_mount.py
        - track_sun.py
        - shutdown_mount.py
        - calculations.py
        # startup mount ensure correct sync
        # track_sun runs nominally, startup & shutdown one time
        # incoporate arduino dome signalling
        ---
        - new mount_con.py (TBD)

    camera:
        - run_fc.py
        - run_fc.sh
        # run firecapture and batch script in fc
        # screenshot periodic from firecapture & feed into webserver
        # delete screenshots after 50, (option for 1 fps to 1/10, 1/30, 1/60)
        ---
        - new firecapture handler .py (TBD)

    peripherals:
        - etalon_control.py
        - nstep_control.py
        - weather_monitor.py
        # javascript buttons to webserver
        ---
        - solved and upgradable

    files & processing:
        - file_handler.py
        # resestablish FTP connection (Q://)

        - feed files into AS4! and IMPPG (TBD)

    present:
        - TBD feed files into output gif loops 
        - hosted to other page on web server

*-*-*-*-*-*-*-
AST Control To Do (1.X.X)
Web Design Critiques:
- connect weather_monitor with track_sun (soon)

- finish file_handler
    - ensure new files go to preprocessing folder
    - tbd

- investigate startup_mount sync 
    - home position
    - shut down procedure to start up consistent
    - re: startup_mount and new home

- print statements at boot & shut down
    - where? redundant

- static terminal boxes, too wide

*-*-*-*-*-*-
AST Control To Do (1.5.6)

- investigate sync in startup_mount
    - fix home coordinates formatting !
    - fix sync method & when to turn off tracking
    
- investigate tracking in track_sun
    - fix sun coordinates formatting
    - intial_slew()
    - update_sun()
    
- investigate sync & position in shutdown_mount
    - fix home coordinates formatting

- fine report weather_monitor
    - later

--------
Signalling:
- connect weather_monitor signalling to track_sun
    - define, redundant?

- feed webcam data into frame. 
- feed firecapture screen output into another frame.

- update nstep controls 
    - to what? nstep revamped to buttons to javascript

- update etalon controls
    - to what? arduino bindings to python?
    - arduino host on python
    - servo A and servo B, numerical increment
